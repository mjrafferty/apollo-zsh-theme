# vim:ft=zsh

__apollo_set_left_prompt() {

  local module current_module prompt_end
  local -i line_index line
  local -a left_modules right_modules

  zstyle -a 'apollo:core:modules:left' modules left_modules
  zstyle -a 'apollo:core:modules:right' modules right_modules

  line_index=1;

  __APOLLO_PROMPT_LINES[line_index]+="\${__APOLLO_LEFT_BEGIN[$line_index]}"

  for ((module=1; module<=${#left_modules[@]};module++)); do

    current_module="${left_modules[module]}"

    __APOLLO_LEFT_MODULE_MAP[module]="$current_module"
    __APOLLO_LEFT_LINE_MAP[line_index]+="${module},"

    case "${current_module}" in
      "newline"|"ruler")
        __APOLLO_PROMPT_LINES[line_index]+="\${__APOLLO_LEFT_SEPARATORS[$module]}\${__APOLLO_LEFT_END[$line_index]}"

        __apollo_add_newline "${current_module}" "${line_index}"
        ((line_index++));

        __APOLLO_PROMPT_LINES[line_index]+="\${__APOLLO_LEFT_BEGIN[$line_index]}"
        __APOLLO_MODULE_HAS_LENGTH[$current_module]=1;
        ;;
      *)
        __APOLLO_PROMPT_LINES[line_index]+="\${__APOLLO_LEFT_SEPARATORS[$module]}\${__APOLLO_MODULE_TEXT[$current_module]}"
        __APOLLO_LEFT_HAS_LENGTH[line_index]+=" + \$__APOLLO_MODULE_HAS_LENGTH[$current_module]"
        ;;
    esac

  done

  for ((line=1;line<=line_index;line++)); do

    __APOLLO_PROMPT_LINES[$line]="\${__APOLLO_LEFT_LINK[$line]}${__APOLLO_PROMPT_LINES[$line]}\${__APOLLO_RIGHT_LINK[$line]}"

    PROMPT+="\${(e)__APOLLO_PROMPT_LINES[$line]}"

    if ((line < line_index)); then
      PROMPT+=$'\n'
    fi

  done

  zstyle -s 'apollo:core:prompt:end' text prompt_end

  PROMPT+="$prompt_end"

}

__apollo_set_left_prompt "$@"
