# vim:ft=zsh

__apollo_style_module() {

  local context module_text
  local -i width min_width
  local left_padding right_padding
  local left_surround right_surround
  local style_string
  local -a cache

  context="$1"
  module_text="$2"

  cache=("${(s.\0.)__APOLLO_STYLE_CACHE[$context]}")

  if [[ -z "$cache[1]" ]]; then

    __apollo_set_style "${context}:main" --dynamic
    style_string="${__APOLLO_RETURN_MESSAGE}"

    __apollo_format_string "${context}:surround:left"
    left_surround="$__APOLLO_RETURN_MESSAGE"

    __apollo_format_string "${context}:surround:right"
    right_surround="$__APOLLO_RETURN_MESSAGE"

    zstyle -s "$context" bg_color bg_color
    __apollo_set_colors "$bg_color" "keep"

    style_string="${left_surround}\0${style_string}\0${right_surround}${__APOLLO_RETURN_MESSAGE}"

    cache=("${(s.\0.)style_string}")
    __APOLLO_STYLE_CACHE[$context]="$style_string"

  fi

  module_text="${cache[2]}${module_text}${cache[3]}"
  left_surround="${cache[1]}"
  right_surround="${cache[4]}"

  zstyle -s "${context}" min_width min_width

  ## Set padding if necessary
  if [[ -n "$min_width" ]]; then
    __apollo_get_display_width "${left_surround}${module_text}${right_surround}"
    ((width=__APOLLO_RETURN_MESSAGE));
    if (( width < min_width )); then
      left_padding="$(((min_width-width)/2))"
      right_padding="$(((min_width-width)-left_padding))"
      left_padding="${(el.${left_padding}.. .)}"
      right_padding="${(el.${right_padding}.. .)}"
    fi
  fi

  __APOLLO_RETURN_MESSAGE="${left_surround}${left_padding}${module_text}${right_padding}${right_surround}"

}

__apollo_style_module "$@"
