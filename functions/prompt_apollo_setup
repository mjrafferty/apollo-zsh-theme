# vim:ft=zsh

## Configurables
typeset -g  APOLLO_PROMPT_END="> "
typeset -g  APOLLO_LINE_LINKS="true"
typeset -g  APOLLO_RULER_COLOR="white"

## Necessary global variables
typeset -gA __APOLLO_CACHE
typeset -g 	__APOLLO_BUFFER_NAME
typeset -gi __APOLLO_BUFFER_FD
typeset -gA __APOLLO_MODULE_TEXT
typeset -gA __APOLLO_MODULE_HAS_LENGTH
typeset -ga __APOLLO_PROMPT_LINE_LENGTH
typeset -g  __APOLLO_PROMPT_COPY # To prevent outside scripts messing with PS1/PROMPT
typeset -g  __APOLLO_RPROMPT_COPY # To prevent outside scripts messing with PS1/PROMPT
typeset -ga __APOLLO_LEFT_HAS_LENGTH
typeset -ga __APOLLO_RIGHT_HAS_LENGTH
typeset -ga __APOLLO_LEFT_SEPARATORS
typeset -ga __APOLLO_RIGHT_SEPARATORS
typeset -ga __APOLLO_LINE_MODULES
typeset -ga __APOLLO_PROMPT_LINES
typeset -gi __APOLLO_BREAK_CACHE_COUNTER
typeset -gi __APOLLO_CURRENT_RPROMPT=1
typeset -gi __APOLLO_EXIT_CODE
typeset -g  __APOLLO_PIPE_EXIT_CODES
typeset -g  __APOLLO_RETURN_MESSAGE   # Used as a temporary storage for values to avoid using subshells

__apollo_set_config () {

  local context key value

}

prompt_apollo_setup() {

  local module conf
  local -a left_modules right_modules

  setopt prompt_subst prompt_percent

  zmodload zsh/datetime

  # Load config files
  for conf in "${__APOLLO_INSTALL_DIR}/conf/"*.conf; do
    source "${conf}";
  done

  zstyle -a 'apollo:core:modules:left' modules left_modules
  zstyle -a 'apollo:core:modules:right' modules right_modules

  # TODO check fpath and update if necessary
  #fpath+=("${__APOLLO_INSTALL_DIR}/functions")
  fpath+=("${__APOLLO_INSTALL_DIR}/modules")

  # TODO move necessary utilities into functions
  source "${__APOLLO_INSTALL_DIR}/lib/utilities.zsh"

  autoload -Uz +X __apollo_add_links __apollo_add_separators __apollo_get_module_text \
    __apollo_precmd __apollo_run_modules __apollo_set_module_text __apollo_add_newline \
    __apollo_cleanup __apollo_make_rprompt __apollo_preexec __apollo_set_left_prompt \
    __apollo_set_prompts __apollo_set_colors __apollo_update_lengths __apollo_update_prompts \
    __apollo_async_update

  autoload -Uz add-zsh-hook
  add-zsh-hook precmd __apollo_precmd
  add-zsh-hook preexec __apollo_preexec
  add-zsh-hook zshexit __apollo_cleanup

  # Open a buffer for modules to use
  __APOLLO_BUFFER_NAME="${TMPDIR:-/tmp}/${USER}__APOLLO_$EPOCHSECONDS"
  mkfifo "${__APOLLO_BUFFER_NAME}"
  exec {__APOLLO_BUFFER_FD}<> "${__APOLLO_BUFFER_NAME}"

  # Load enabled modules
  for module in "${left_modules[@]}" "${right_modules[@]}"; do

    if [[ "$module" == "newline" || "$module" == "ruler" ]]; then
      continue;
    fi

    autoload -Uz +X "__apollo_${module}_run"

  done

  PROMPT=""
  RPROMPT=""

  __apollo_set_prompts

  unfunction __apollo_add_newline __apollo_make_rprompt __apollo_set_left_prompt __apollo_set_prompts

}

prompt_apollo_setup "$@"
