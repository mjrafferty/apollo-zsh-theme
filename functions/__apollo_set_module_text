# vim:ft=zsh

__apollo_set_module_text() {

  local module side cache_key module_text bg_color
  local always_show module_colors
  local left_label right_label
  local left_surround right_surround
  local left_padding right_padding
  local -i width min_width

  module="$1"
  side="$2"
  cache_key="$3"

  __APOLLO_MODULE_MODE[$module]="default"

  # Clear out old message before passing to module
  __APOLLO_RETURN_MESSAGE=""

  "__apollo_${module}_run" >&"${__APOLLO_BUFFER_FD}"

  # Flush any remaining data in buffer
  while read -rt dump <&"${__APOLLO_BUFFER_FD}"; do true; done

  mode="${__APOLLO_MODULE_MODE[$module]}"

  zstyle -b "apollo:${module}:${mode}:${side}" always_show always_show

  if [[ "$always_show" == "no" && ${#__APOLLO_RETURN_MESSAGE} == 0 ]]; then
    __APOLLO_MODULE_HAS_LENGTH[$module]="0"
    __APOLLO_MODULE_TEXT[$module]=""
    if [[ -n "$cache_key" ]]; then
      __APOLLO_CACHE["${module}-${cache_key}"]="0,${module_text}"
    fi
    return;
  fi

  __apollo_format_module "apollo:${module}:${mode}:${side}" "$__APOLLO_RETURN_MESSAGE"

  __APOLLO_MODULE_TEXT[$module]="${__APOLLO_RETURN_MESSAGE}"

  __APOLLO_MODULE_HAS_LENGTH[$module]="1"

  if [[ -n "$cache_key" ]]; then
    __APOLLO_CACHE["${module}-${cache_key}"]="${__APOLLO_MODULE_HAS_LENGTH[$module]},${__APOLLO_MODULE_TEXT[$module]},${mode}"
  fi

}

__apollo_set_module_text "$@"
