# vim:ft=zsh

__apollo_set_module_text() {

  local module module_text modules_colors transition_fg cache_key side left_surround right_surround
  local -u fg_var bg_var

  module="$1"
  side="$2"
  cache_key="$3"

  zstyle -s 'apollo:core:modules:left' surround left_surround
  zstyle -s 'apollo:core:modules:right' surround right_surround

  fg_var="APOLLO_${module}_FG"
  bg_var="APOLLO_${module}_BG"

  # Clear out old message before passing to module
  __APOLLO_RETURN_MESSAGE=""

   "__apollo_${module}_run" >&"${__APOLLO_BUFFER_FD}"

  # Flush any remaining data in buffer
  while read -rt dump <&"${__APOLLO_BUFFER_FD}"; do true; done

  if (( ${#__APOLLO_RETURN_MESSAGE} == 0 )); then
    __APOLLO_MODULE_HAS_LENGTH[$module]="0"
    __APOLLO_MODULE_TEXT[$module]=""
    if [[ -n "$cache_key" ]]; then
      __APOLLO_CACHE["${module}-${cache_key}"]="0|${__APOLLO_RETURN_MESSAGE}"
    fi
    return;
  fi

  ## TODO padding
  ## TODO icons?
  module_text="${left_surround}${__APOLLO_RETURN_MESSAGE}${right_surround}"

  __apollo_set_colors "${(P)${fg_var}}" "${(P)${bg_var}}"
  module_colors="${__APOLLO_RETURN_MESSAGE}"

  __apollo_set_colors "${(P)${bg_var}}" "keep"
  transition_fg="${__APOLLO_RETURN_MESSAGE}"

  __APOLLO_MODULE_TEXT[$module]="${module_colors}${module_text}${transition_fg}"

  __APOLLO_MODULE_HAS_LENGTH[$module]="1"

  if [[ -n "$cache_key" ]]; then
    __APOLLO_CACHE["${module}-${cache_key}"]="${__APOLLO_MODULE_HAS_LENGTH[$module]}|${__APOLLO_MODULE_TEXT[$module]}"
  fi

}

__apollo_set_module_text "$@"
