# vim:ft=zsh

__apollo_get_display_width(){

  local format_regex='%{*%}'

  __APOLLO_RETURN_MESSAGE="${(m)#${(S%)1//$~format_regex/}}"

}

__apollo_set_mode() {

  __APOLLO_MODULE_MODE[$1]="$2"

}

__apollo_cleanup() {

  if [[ "$$" == "${__APOLLO_PID}" ]]; then

    exec {__APOLLO_BUFFER_FD}>&-
    rm "$__APOLLO_BUFFER_NAME"

    if (( __APOLLO_ASYNC == 1 )); then
      async_stop_worker apollo_async_helper
    fi

  fi

}

__apollo_chpwd() {

  ## Seeing bug $PWD not always updating. Hoping this will work around it
  PWD="${(%):-%d}"

  if ((__APOLLO_ASYNC == 1)); then
    async_worker_eval apollo_async_helper "cd $PWD"
  fi
}

## Update buffered prompt when executing command
zle-line-finish() {

  local current_theme="$APOLLO_THEME"

  APOLLO_THEME="buffer"
  __apollo_run_prompt

  zle && zle .reset-prompt

  APOLLO_THEME="$current_theme"

}

# Open a buffer for modules to use
__apollo_check_buffer () {

  if [[ -z "$__APOLLO_BUFFER_NAME" ]]; then
    __APOLLO_BUFFER_NAME="${TMPDIR:-/tmp}/${USER}__APOLLO_$EPOCHSECONDS"
  fi

  if [[ ! -e "${__APOLLO_BUFFER_NAME}" ]]; then
    if [[ -n "${__APOLLO_BUFFER_FD}" ]]; then
      exec {__APOLLO_BUFFER_FD}>&-
      unset "${__APOLLO_BUFFER_FD}"
    fi
    mkfifo "${__APOLLO_BUFFER_NAME}"
    chmod 600 "${__APOLLO_BUFFER_NAME}";
  fi

  if [[ -z "${__APOLLO_BUFFER_FD}" ]]; then
    exec {__APOLLO_BUFFER_FD}<> "${__APOLLO_BUFFER_NAME}"
  fi

  if ! print -nu "${__APOLLO_BUFFER_FD}" ; then
    unset "${__APOLLO_BUFFER_FD}" 2> /dev/null
    exec {__APOLLO_BUFFER_FD}<> "${__APOLLO_BUFFER_NAME}"

	fi

}

__apollo_sanitize() {

  local input="$1"

  regexp-replace input '(`|\$)' '\\$MATCH'
  regexp-replace input '%' '%%'

  __APOLLO_RETURN_MESSAGE="$input"

}

__apollo_trap_int() {

  # Trap handling is different on older ZSH versions, and need to use function trap in order to preserve return code
  # Using a list trap for newer ZSH versions as function trap caused issues with other ZSH plugins
  if ((__APOLLO_LEGACY_TRAP==0)); then
    trap "zle-line-finish; __APOLLO_EXIT_CODE=130; __apollo_run_prompt; return 130;" INT
  else
    TRAPINT(){
      zle-line-finish
      __APOLLO_EXIT_CODE=130
      __apollo_run_prompt
      return $((128 + $1))
    }
  fi

}

__apollo_load_utilities() {};

__apollo_load_utilities "$@"
