# vim:ft=zsh

__apollo_precmd() {

  __APOLLO_EXIT_CODE=$?
  __APOLLO_PIPE_EXIT_CODES=( "${pipestatus[@]}" )

  local start startmod profiler
	local module
  local -a line_modules
  local -i line num

  # Forcefully refresh cache by pressing enter a few times
  if ((__APOLLO_BREAK_CACHE_COUNTER++ >= 2)); then
    __APOLLO_CACHE=();
    __APOLLO_BREAK_CACHE_COUNTER=0;
  fi

  zstyle -b 'apollo:core:profiler' enabled profiler

  if [[ "$profiler" == "yes" ]] ; then
    start="$EPOCHREALTIME"
    startmod=${EPOCHREALTIME}
  fi

  PROMPT="$__APOLLO_PROMPT_COPY"
  RPROMPT="$__APOLLO_RPROMPT_COPY"

  for ((line=1; line <= ${#__APOLLO_PROMPT_LINES[@]}; line++)); do

    line_modules=(${(s:,:)__APOLLO_RIGHT_LINE_MAP[line]})

    for num in "${line_modules[@]}"; do

      module="${__APOLLO_MODULE_MAP[num]}"

      __apollo_get_module_text "$module" "right" "$line" "$num"

    done

    line_modules=(${(s:,:)__APOLLO_LEFT_LINE_MAP[line]})

    for num in "${line_modules[@]}"; do

      module="${__APOLLO_MODULE_MAP[num]}"

      __apollo_get_module_text  "$module" "left" "$line" "$num"

    done

  done

  if [[ "$profiler" == "yes" ]] ; then
    printf "%25s: %f\n" "modules_total" "$((EPOCHREALTIME - startmod))"
  fi

  __apollo_update_prompts

  if [[ "$profiler" == "yes" ]] ; then
    printf "%25s: %f\n" "total" "$((EPOCHREALTIME-start))"
  fi

}

__apollo_precmd "$@"
