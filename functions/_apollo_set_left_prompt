# vim:ft=zsh

_apollo_set_left_prompt() {

  local module prompt_length module_text current_module
  local -i line_index

  line_index=1;
  prompt_length="${#APOLLO_LEFT_PROMPT_MODULES[@]}"

  for ((module=1; module<=prompt_length;module++)); do

    current_module="${APOLLO_LEFT_PROMPT_MODULES[module]}"

    _APOLLO_LINE_MODULES[line_index]+="${current_module} "

    case "${current_module}" in
      "newline"|"ruler")
        _apollo_add_newline "${current_module}" "${line_index}"
        _APOLLO_FIRST_SEPARATOR_ON_LINE=""
        ((line_index++));
        ;;
      *)
        _APOLLO_PROMPT_LINES[line_index]+="\${(e)_APOLLO_MODULE_TEXT[$current_module]}"
        _APOLLO_LEFT_HAS_LENGTH[line_index]+=" + \$_APOLLO_MODULE_HAS_LENGTH[$current_module]"
        ;;
    esac

  done

  _APOLLO_PROMPT_LINES[line_index]+="${_APOLLO_RETURN_MESSAGE}"

  for ((line=1;line<=line_index;line++)); do

    if [[ "$APOLLO_LINE_LINKS" == "true" ]]; then
      if ((line < line_index)); then
        _APOLLO_PROMPT_LINES[$line]="\${_APOLLO_LEFT_LINK[$line]}${_APOLLO_PROMPT_LINES[$line]}\${_APOLLO_RIGHT_LINK[$line]}"
      else
        _APOLLO_PROMPT_LINES[$line]="\${_APOLLO_LEFT_LINK[$line]}${_APOLLO_PROMPT_LINES[$line]}"
      fi
    fi

    PROMPT+="\${(e)_APOLLO_PROMPT_LINES[$line]}"

    if ((line < line_index)); then
      PROMPT+="${_APOLLO_NEWLINE}"
    fi

  done

  PROMPT+="$APOLLO_PROMPT_END"
  _APOLLO_PROMPT_COPY="$PROMPT"

}

_apollo_set_left_prompt "$@"
