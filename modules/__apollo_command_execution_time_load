# vim:ft=zsh
################################################################
# Display the duration the command needed to run.

typeset -gF __APOLLO_COMMAND_EXECUTION_TIME_START="-1"

__apollo_command_execution_time_run() {

  local context mode
  local duration min_duration precision

  context="$1"
  mode="default"

  if ((__APOLLO_COMMAND_EXECUTION_TIME_START < 0)); then
    __APOLLO_RETURN_MESSAGE=""
    return
  fi

  ((duration = EPOCHREALTIME - __APOLLO_COMMAND_EXECUTION_TIME_START))
  __APOLLO_COMMAND_EXECUTION_TIME_START="-1"

  if (( duration >= 60 )); then
    mode="minute"
    __apollo_set_mode command_execution_time "minute"
  elif (( duration >= 3600 )); then
    mode="hour"
    __apollo_set_mode command_execution_time "hour"
  fi

  zstyle -s "${context}:${mode}" min_duration min_duration

  if [[ -n "$duration" && "$duration" -lt "$min_duration"  ]]; then
    __APOLLO_RETURN_MESSAGE=""
    return
  fi

  case "$mode" in
    "default")
      zstyle -s "${context}:${mode}" precision precision
      if ((precision == 0)); then
        typeset -i duration
      else
        typeset -F ${precision} duration
      fi
      __APOLLO_RETURN_MESSAGE="${duration}"
      ;;
    "minute")
      duration=$(( int(rint(duration)) ))
      TZ=GMT strftime -s __APOLLO_RETURN_MESSAGE '%M:%S' "${duration}"
      ;;
    "hour")
      duration=$(( int(rint(duration)) ))
      TZ=GMT strftime -s __APOLLO_RETURN_MESSAGE '%H:%M:%S' "${duration}"
      ;;
  esac

}

__apollo_command_execution_time_preexec(){
  __APOLLO_COMMAND_EXECUTION_TIME_START=$EPOCHREALTIME
}

zmodload zsh/mathfunc
