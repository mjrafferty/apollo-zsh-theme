# vim:ft=zsh

__apollo_vcs_cache_key() {
  __APOLLO_RETURN_MESSAGE="$PWD"
}

__apollo_vcs_run() {

  local line="$1"
  local side="$2"
  local async_results="$3"

  __APOLLO_RETURN_MESSAGE="${async_results}"

}

__apollo_vcs_always_async() {
  vcs_info hello
  echo "${vcs_info_msg_0_}"
}

estyle-cfc() {
  local d
  local -a cfc_dirs
  cfc_dirs=(
    ${HOME}/src/code/*(/N)
  )

  for d in ${cfc_dirs}; do
    d=${d%/##}
    [[ $PWD == $d(|/*) ]] && return 0
  done
  return 1
}

autoload -Uz vcs_info

zstyle ':vcs_info:*' formats "VCS:%s|Repo:%r|Branch:%b|Action:%a|Rev:%12.12i|Base:%R|Misc:%m|Staged:%c|Unstaged:%u"
zstyle ':vcs_info:*' actionformats "VCS:%s|Repo:%r|Branch:%b|Action:%a|Rev:%12.12i|Base:%R|Misc:%m|Staged:%c|Unstaged:%u"
zstyle ':vcs_info:*' max-exports 1
zstyle ':vcs_info:*' check-for-changes "true"
zstyle ':vcs_info:*' check-for-staged-changes "true"
zstyle ':vcs_info:*' get-revision "true"
zstyle ':vcs_info:*' disable-patterns "true"

zstyle -e ':vcs_info:git:*' check-for-changes 'estyle-cfc && reply=( true ) || reply=( false )'
zstyle -e ':vcs_info:git:*' check-for-staged-changes 'estyle-cfc && reply=( true ) || reply=( false )'
