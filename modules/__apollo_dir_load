# vim:ft=zsh

__apollo_dir_cache_key() {
  __APOLLO_RETURN_MESSAGE="$PWD"
}

__apollo_dir_run() {

  local -i  last_count
  local context mode method absolute dir sep output element shorten_length
  local -a split_dir last_style element_style short_style

  context="$1"
  mode="default"

  if [[ ! -w "$PWD" ]]; then
    mode="readonly";
    __apollo_set_mode dir "readonly"
  fi

  zstyle -b "${context}:${mode}" absolute absolute
  zstyle -s "${context}:${mode}" last_count last_count
  zstyle -s "${context}:${mode}" shorten_length shorten_length
  zstyle -s "${context}:${mode}" shorten_string shorten_string

  __apollo_set_style "${context}:${mode}:sep"
  sep="${__APOLLO_RETURN_MESSAGE}"

  if [[ "$absolute" == "yes" ]]; then
    dir="${(%):-%${last_count}d}"
    if (( ${#dir} < ${#${(%):-%d}} )); then
      dir="../${dir}"
    fi
  else
    dir="${(%):-%${last_count}~}"
    if (( ${#dir} < ${#${(%):-%~}} )); then
      dir="../${dir}"
    fi
  fi

  __apollo_sanitize "$dir"
  dir="$__APOLLO_RETURN_MESSAGE"

  if [[ "$shorten_length" == "auto" ]]; then

    dir_length="${#dir}"

    if (( dir_length < 30 )); then
      shorten_length=0;
    elif (( dir_length < 60 )); then
      shorten_length=5;
    elif (( dir_length < 80 )); then
      shorten_length=3;
    else
      shorten_length=1;
    fi

  fi

  __apollo_set_style "${context}:${mode}:sep"
  sep="${__APOLLO_RETURN_MESSAGE}"

  __apollo_set_style "${context}:${mode}:element" --dynamic
  element_style=("${(s.\0.)__APOLLO_RETURN_MESSAGE}")

  __apollo_set_style "${context}:${mode}:shortened" --dynamic
  short_style=("${(s.\0.)__APOLLO_RETURN_MESSAGE}")

  split_dir=("${(s:/:)dir}")

  for ((element=1; element < ${#split_dir[@]}; element++)); do

    if (( element == 1 )); then
      output+="${element_style[1]}${split_dir[element]}${element_style[2]}${sep}"
      continue;
    fi

    before_length="${#split_dir[element]}"

    split_dir[element]="${(%):-%${shorten_length}>${shorten_string}>${split_dir[element]}}"

    if (( ${#split_dir[element]} < before_length)); then
      output+="${short_style[1]}${split_dir[element]}${short_style[2]}${sep}"
    else
      output+="${element_style[1]}${split_dir[element]}${element_style[2]}${sep}"
    fi

  done

  __apollo_set_style "${context}:${mode}:last" --dynamic
  last_style=("${(s.\0.)__APOLLO_RETURN_MESSAGE}")

  output+="${last_style[1]}${split_dir[element]}${last_style[2]}"
  __APOLLO_RETURN_MESSAGE="$output"

}

__apollo_dir_theme_init() {

  local bookmark pattern bookmark_name
  local -a bookmarks bookmark_patterns split_pattern

  zstyle -a ":apollo:${APOLLO_THEME}:*:*:dir:*" bookmarks bookmarks

  for bookmark in "${bookmarks[@]}"; do
    hash -d "${bookmark}" 2> /dev/null
  done

  zstyle -a ":apollo:${APOLLO_THEME}:*:*:dir:*" bookmark_patterns bookmark_patterns

  for pattern in "${bookmark_patterns[@]}"; do

    split_pattern=("${(s.;.)pattern}")

    bookmarks=(${~=split_pattern[1]}(/N))

    if [[ -z "${split_pattern[2]}" ]]; then
      for bookmark in "${bookmarks[@]}"; do
        hash -d "${bookmark##*/}=${bookmark}" 2> /dev/null
      done
    else
      for bookmark in "${bookmarks[@]}"; do
        bookmark_name="${bookmark%${split_pattern[2]}}"
        hash -d "${bookmark_name##*/}=${bookmark}" 2> /dev/null
      done
    fi

  done

}
